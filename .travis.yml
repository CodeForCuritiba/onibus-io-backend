---
language: python

python: 
  - "3.7"

services:
  - docker

branches:
  only:
    - master
    - release-.+

jobs:
  include:
    - stage: Test build on project; smoketest
      if: type = pull_request
      before_script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      script:
        - docker-compose up -d
        - curl -v http://localhost:3000/api/linhas
        - curl -v http://localhost:3000/api/veiculos

      # - stage: Deploy project to DockerHUB
    #   if: type = push && branch = master
    #   before_script:
    #     - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    #     - docker build -t onibus-io-frontend .
    #     - docker tag onibus-io-frontend $DOCKER_USERNAME/onibus-io-frontend:$(cat VERSION)
    #     - docker tag onibus-io-frontend $DOCKER_USERNAME/onibus-io-frontend:latest
    #   script:
    #     - docker push $DOCKER_USERNAME/onibus-io-frontend:$(cat VERSION)
    #     - docker push $DOCKER_USERNAME/onibus-io-frontend:latest
    # - stage: Deploy to production server
    #   if: type = push && branch = master
    #   before_script:
    #     - pip install pipenv
    #     - openssl aes-256-cbc -K $encrypted_f4b4a98bdc3f_key -iv $encrypted_f4b4a98bdc3f_iv -in deploy/id_rsa.enc -out deploy/id_rsa -d
    #   script:
    #     - cd deploy
        # - ./run.sh
        #- docker run --rm -v $(pwd):/data joepreludian/python-pipenv ./run.sh
